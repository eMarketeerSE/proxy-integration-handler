group 'com.emarketeer'
version '1.0'

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'groovy'
apply plugin: 'kotlin'

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    AWS_ACCESS_KEY_ID = System.getenv("AWS_ACCESS_KEY_ID")
    AWS_SECRET_KEY_ID = System.getenv("AWS_SECRET_ACCESS_KEY")
}


buildscript {
    ext.kotlin_version = '1.2.21'

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.amazonaws:aws-java-sdk:1.10.58'
    }
}

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
}

repositories {
    mavenCentral()
}


dependencies {
    compile(
            'com.amazonaws:aws-lambda-java-core:1.1.0',
            'com.amazonaws:aws-lambda-java-log4j2:1.0.0',

    )
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile group: 'com.google.api-client', name: 'google-api-client-gson', version: '1.23.0'
    compile group: 'com.amazonaws', name: 'aws-xray-recorder-sdk-core', version: '1.3.1'
}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
    test {
        java {
            srcDirs = ["src/test/java"]
        }
        resources {
            srcDirs = ["src/test/resources"]
        }
    }
}


test {
    testLogging {
        exceptionFormat = 'full'
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

publishing {
    repositories {
        maven {
            url "s3://repo.emarketeer.io/release"
            credentials(AwsCredentials) {
                def defaultCredentials = new com.amazonaws.auth.DefaultAWSCredentialsProviderChain().getCredentials()
                accessKey defaultCredentials.getAWSAccessKeyId()
                secretKey defaultCredentials.getAWSSecretKey()
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java
        }

        jar(MavenPublication) {
            from components.java
        }
    }
}
